"use strict";(self.webpackChunkcortisol=self.webpackChunkcortisol||[]).push([[4],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||i;return n?o.createElement(m,a(a({ref:t},c),{},{components:n})):o.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9733:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const i={title:"Configuration",sidebar_position:4},a=void 0,l={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"Configuration",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/cortisol/configuration",draft:!1,editUrl:"https://github.com/CortisolAI/cortisol/docs/docs/configuration.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Configuration",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Writing a cortisolfile",permalink:"/cortisol/writing-a-cortisolfile"},next:{title:"Best practices",permalink:"/cortisol/best-practices"}},s={},p=[{value:"Configuration",id:"configuration",level:2},{value:"Log Cost Estimate",id:"log-cost-estimate",level:3},{value:"Name",id:"name",level:4},{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:3},{value:"Required Flags - Option 1",id:"required-flags---option-1",level:4},{value:"Required Flags - Option 2",id:"required-flags---option-2",level:4},{value:"Required Flags - Option 3",id:"required-flags---option-3",level:4},{value:"Optional Flags",id:"optional-flags",level:4}],c={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("h3",{id:"log-cost-estimate"},"Log Cost Estimate"),(0,r.kt)("h4",{id:"name"},"Name"),(0,r.kt)("p",null,"Forecast log costs"),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cortisol logs cost-estimate --host HOST --log-file LOG_FILE --users NUM_USERS --spawn-rate SPAWN_RATE --run-time RUN_TIME -cortisol-file CORTISOL_PYTHON_FILE\n")),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"Forecast log costs pre-production with Cortisol for ",(0,r.kt)("a",{parentName:"p",href:"https://www.datadoghq.com/"},"Datadog"),", ",(0,r.kt)("a",{parentName:"p",href:"https://newrelic.com/"},"New Relic"),", ",(0,r.kt)("a",{parentName:"p",href:"https://grafana.com/"},"Grafana")," and ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.google.com/logging"},"GCP Cloud Logging")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cortisol logs cost-estimate --host http://10.20.31.32:8000 --users 100 --spawn-rate 30 --run-time 20m -cortisol-file some_cortisol_file.py\n")),(0,r.kt)("h4",{id:"required-flags---option-1"},"Required Flags - Option 1"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-f, --cortisol-file PATH"),"      Path to the CORTISOL_FILE"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-h, --host TEXT"),"               Host in the following format: ",(0,r.kt)("a",{parentName:"p",href:"http://10.20.31.32"},"http://10.20.31.32")," or ",(0,r.kt)("a",{parentName:"p",href:"http://10.20.31.32:8000"},"http://10.20.31.32:8000")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-l, --log-file PATH"),"           Path to log file"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-u, --users INTEGER"),"           Peak number of concurrent users"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-r, --spawn-rate INTEGER"),"      Rate to spawn users at (users per second)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-t, --run-time TEXT"),"           Stop after the specified amount of time, e.g. (50, 30s, 200m, 5h, 2h30m, etc.). Default unit in seconds."),(0,r.kt)("h4",{id:"required-flags---option-2"},"Required Flags - Option 2"),(0,r.kt)("p",null,"All the latter options plus the following in case your application run in a Docker container:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-c, --container-id TEXT"),"      Optional docker container id where your application runs"),(0,r.kt)("h4",{id:"required-flags---option-3"},"Required Flags - Option 3"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--config PATH"),"                 Path to config file (YAML or JSON) containing the long version of flags from option 1"),(0,r.kt)("h4",{id:"optional-flags"},"Optional Flags"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--stats-file PATH"),"             Path where to store the cortisol statistics output as a csv"),(0,r.kt)("p",null,"Here's a YAML example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},'host: "http://10.20.31.32:8000"\nlog-file: "/path/to/logfile"\nusers: 100\nspawn-rate: 30\nrun-time: "20m"\ncortisol-file: "some_cortisol_file.py"\nstats-file: "cortisol_stats.csv"\n')),(0,r.kt)("p",null,"Here's a YAML example with docker container id:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},'host: "http://10.20.31.32:8000"\nlog-file: "/path/to/logfile"\nusers: 100\nspawn-rate: 30\nrun-time: "20m"\ncortisol-file: "some_cortisol_file.py"\ncontainer-id: "80f1bc1e7feb"\nstats-file: "cortisol_stats.csv"\n')),(0,r.kt)("p",null,"and a JSON example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n  "host": "http://10.20.31.32:8000",\n  "log_file": "/path/to/logfile",\n  "users": 100,\n  "spawn_rate": 30,\n  "run_time": "20m",\n  "cortisol_file": "some_cortisol_file.py",\n  "container_id": "80f1bc1e7feb",\n  "stats-file": "cortisol_stats.csv"\n}\n')))}f.isMDXComponent=!0}}]);